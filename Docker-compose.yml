networks:
  default:
    name: task-tracker-network
    driver: bridge

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: task-tracker
    ports:
      - "3306:3306"
    volumes:
      - ./mysql_data:/var/lib/mysql

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"

  redis:
    image: redis:7
    container_name: redis
    restart: always
    ports:
      - "6379:6379"

  vault:
    build: .
    container_name: vault
    ports:
      - "8200:8200"
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: root
      VAULT_DEV_LISTEN_ADDRESS: 0.0.0.0:8200
    cap_add:
      - IPC_LOCK

  vault-init:
    image: hashicorp/vault:1.15.2
    container_name: vault-init
    entrypoint: [ "sh", "-c", "apk add curl jq --no-cache && /vault-init/init.sh" ]
    volumes:
      - ./vault-init:/vault-init
    depends_on:
      - vault
    restart: "no"

  backend:
    build:
      context: .
      dockerfile: task-tracker-backend/Dockerfile
    ports:
      - "8080:8080"
    env_file:
      - .env.dev
    depends_on:
      - kafka
      - mysql
      - redis
      - vault-init
    environment:
      SPRING_CLOUD_VAULT_AUTHENTICATION: token
      SPRING_PROFILES_ACTIVE: docker

  frontend:
    build:
      context: ./task-tracker-frontend
    container_name: task-tracker-frontend
    ports:
      - "80:80"
    env_file:
      - .env.dev
    depends_on:
      - backend
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://backend:8080

  scheduler:
    build:
      context: .
      dockerfile: task-tracker-scheduler/Dockerfile
    env_file:
      - .env.dev
    depends_on:
      - vault-init

  email-sender:
    build:
      context: .
      dockerfile: task-tracker-email-sender/Dockerfile
    env_file:
      - .env.dev
    depends_on:
      - vault-init

volumes:
  mysql_data: